#!/system/bin/sh

PATH=/system/bin:/system/xbin

ndk_translation_bin=0
dest_dir=/system/lib$1/arm$1
binfmt_misc_dir=/proc/sys/fs/binfmt_misc

urls[0]=http://t.cn/EJrmzZv
urls[1]=http://t.cn/EJrmYMH
urls[2]=http://t.cn/EJrmrA7
urls[3]=http://tinyurl.com/y3nagyza
urls[4]=http://tinyurl.com/y6azmjas
urls[5]=http://tinyurl.com/y6g6cx27

mount_sfs()
{
	lodevice=`losetup -r -f -s $1`
	[ -n "$lodevice" ] && mount -o 'context="u:object_r:system_file:s0"' $lodevice $2
}

if [ -z "$1" ]; then
	v=9_y
	u=1
else
	v=9_z
	u=2
fi

if [ -s /system/lib$1/libndk_translation.so ]; then
	log -pi -tndk_translation "found /system/lib$1/libndk_translation.so"
elif [ -e /system/etc/ndk_translation$v.sfs ]; then
	mount_sfs /system/etc/ndk_translation$v.sfs $dest_dir
else
	if mountpoint -q $dest_dir; then
		kill -9 `fuser -m $dest_dir`
		umount -f $dest_dir
	fi
	if [ ! -d /data/media/0/arm ]; then
		mkdir -p /data/media/0/arm
		chown 1023.1023 /data/media/0/arm
	fi
	cd /data/media/0/arm
	[ -s /data/arm/ndk_translation$v.sfs ] && mv /data/arm/ndk_translation$v.sfs .
	while ! mount_sfs ndk_translation$v.sfs $dest_dir; do
		while [ "$(getprop net.dns1)" = "" ]; do
			sleep 10
		done
		[ -s ndk_translation$v.sfs ] && sleep 10 || sleep 30
	done
fi

[ -s /system/lib$1/libndk_translation.so ] || mount --bind $dest_dir/libndk_translation.so /system/lib$1/libndk_translation.so

# this is to add the supported binary formats via binfmt_misc

if [ ! -e $binfmt_misc_dir/register ]; then
	modprobe binfmt_misc
	mount -t binfmt_misc none $binfmt_misc_dir
fi

cd $binfmt_misc_dir
if [ -e register ]; then
	[ -e /system/bin/ndk_translation_program_runner_binfmt_misc_arm$1 ] && dest_dir=/system/bin
	# register ndk_translation for arm binaries
	if [ -z "$1" ]; then
		echo ':arm_exe:M::\\x7f\\x45\\x4c\\x46\\x01\\x01\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x02\\x00\\x28::'"$dest_dir/ndk_translation_program_runner_binfmt_misc_arm:P" > register
		echo ':arm_dyn:M::\\x7f\\x45\\x4c\\x46\\x01\\x01\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x03\\x00\\x28::'"$dest_dir/ndk_translation_program_runner_binfmt_misc_arm:P" > register
	else
		echo ':arm64_exe:M::\\x7f\\x45\\x4c\\x46\\x02\\x01\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x02\\x00\\xb7::'"$dest_dir/ndk_translation_program_runner_binfmt_misc_arm64:P" > register
		echo ':arm64_dyn:M::\\x7f\\x45\\x4c\\x46\\x02\\x01\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x03\\x00\\xb7::'"$dest_dir/ndk_translation_program_runner_binfmt_misc_arm64:P" > register
	fi
	if [ -e arm${1}_exe ]; then
		ndk_translation_bin=1
	fi
else
	log -pe -tndk_translation "No binfmt_misc support"
fi

if [ $ndk_translation_bin -eq 0 ]; then
	log -pe -tndk_translation "ndk_translation_program_runner_binfmt_misc_arm$1 enabling failed!"
else
	log -pi -tndk_translation "ndk_translation_program_runner_binfmt_misc_arm$1 enabled"
fi

[ "$(getprop ro.zygote)" = "zygote64_32" -a -z "$1" ] && exec $0 64

exit 0
